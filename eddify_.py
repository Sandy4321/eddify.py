import os as _
import keyword as __
___ = True
____ = [chr(97)+chr(98)+chr(115), chr(100)+chr(105)+chr(99)+chr(116), chr(104)+chr(101)+chr(108)+chr(112), chr(109)+chr(105)+chr(110), chr(115)+chr(101)+chr(116)+chr(97)+chr(116)+chr(116)+chr(114), chr(97)+chr(108)+chr(108), chr(100)+chr(105)+chr(114), chr(104)+chr(101)+chr(120), chr(110)+chr(101)+chr(120)+chr(116), chr(115)+chr(108)+chr(105)+chr(99)+chr(101), chr(97)+chr(110)+chr(121), chr(100)+chr(105)+chr(118)+chr(109)+chr(111)+chr(100), chr(105)+chr(100), chr(111)+chr(98)+chr(106)+chr(101)+chr(99)+chr(116), chr(115)+chr(111)+chr(114)+chr(116)+chr(101)+chr(100), chr(97)+chr(115)+chr(99)+chr(105)+chr(105), chr(101)+chr(110)+chr(117)+chr(109)+chr(101)+chr(114)+chr(97)+chr(116)+chr(101), chr(105)+chr(110)+chr(112)+chr(117)+chr(116), chr(111)+chr(99)+chr(116), chr(115)+chr(116)+chr(97)+chr(116)+chr(105)+chr(99)+chr(109)+chr(101)+chr(116)+chr(104)+chr(111)+chr(100), chr(98)+chr(105)+chr(110), chr(101)+chr(118)+chr(97)+chr(108), chr(105)+chr(110)+chr(116), chr(111)+chr(112)+chr(101)+chr(110), chr(115)+chr(116)+chr(114), chr(98)+chr(111)+chr(111)+chr(108), chr(101)+chr(120)+chr(101)+chr(99), chr(105)+chr(115)+chr(105)+chr(110)+chr(115)+chr(116)+chr(97)+chr(110)+chr(99)+chr(101), chr(111)+chr(114)+chr(100), chr(115)+chr(117)+chr(109), chr(98)+chr(121)+chr(116)+chr(101)+chr(97)+chr(114)+chr(114)+chr(97)+chr(121), chr(102)+chr(105)+chr(108)+chr(116)+chr(101)+chr(114), chr(105)+chr(115)+chr(115)+chr(117)+chr(98)+chr(99)+chr(108)+chr(97)+chr(115)+chr(115), chr(112)+chr(111)+chr(119), chr(115)+chr(117)+chr(112)+chr(101)+chr(114), chr(98)+chr(121)+chr(116)+chr(101)+chr(115), chr(102)+chr(108)+chr(111)+chr(97)+chr(116), chr(105)+chr(116)+chr(101)+chr(114), chr(112)+chr(114)+chr(105)+chr(110)+chr(116), chr(116)+chr(117)+chr(112)+chr(108)+chr(101), chr(99)+chr(97)+chr(108)+chr(108)+chr(97)+chr(98)+chr(108)+chr(101), chr(102)+chr(111)+chr(114)+chr(109)+chr(97)+chr(116), chr(108)+chr(101)+chr(110), chr(112)+chr(114)+chr(111)+chr(112)+chr(101)+chr(114)+chr(116)+chr(121), chr(116)+chr(121)+chr(112)+chr(101), chr(99)+chr(104)+chr(114), chr(102)+chr(114)+chr(111)+chr(122)+chr(101)+chr(110)+chr(115)+chr(101)+chr(116), chr(108)+chr(105)+chr(115)+chr(116), chr(114)+chr(97)+chr(110)+chr(103)+chr(101), chr(118)+chr(97)+chr(114)+chr(115), chr(99)+chr(108)+chr(97)+chr(115)+chr(115)+chr(109)+chr(101)+chr(116)+chr(104)+chr(111)+chr(100), chr(103)+chr(101)+chr(116)+chr(97)+chr(116)+chr(116)+chr(114), chr(108)+chr(111)+chr(99)+chr(97)+chr(108)+chr(115), chr(114)+chr(101)+chr(112)+chr(114), chr(122)+chr(105)+chr(112), chr(99)+chr(111)+chr(109)+chr(112)+chr(105)+chr(108)+chr(101), chr(103)+chr(108)+chr(111)+chr(98)+chr(97)+chr(108)+chr(115), chr(109)+chr(97)+chr(112), chr(114)+chr(101)+chr(118)+chr(101)+chr(114)+chr(115)+chr(101)+chr(100), chr(95)+chr(95)+chr(105)+chr(109)+chr(112)+chr(111)+chr(114)+chr(116)+chr(95)+chr(95), chr(99)+chr(111)+chr(109)+chr(112)+chr(108)+chr(101)+chr(120), chr(104)+chr(97)+chr(115)+chr(97)+chr(116)+chr(116)+chr(114), chr(109)+chr(97)+chr(120), chr(114)+chr(111)+chr(117)+chr(110)+chr(100), chr(100)+chr(101)+chr(108)+chr(97)+chr(116)+chr(116)+chr(114), chr(104)+chr(97)+chr(115)+chr(104), chr(109)+chr(101)+chr(109)+chr(111)+chr(114)+chr(121)+chr(118)+chr(105)+chr(101)+chr(119), chr(115)+chr(101)+chr(116)]
_____ = __.kwlist + ____

______ = str(input(chr(70)+chr(105)+chr(108)+chr(101)+chr(32)+chr(116)+chr(111)+chr(32)+chr(69)+chr(100)+chr(100)+chr(121)+chr(105)+chr(102)+chr(121)+chr(58)))
_______ = dict()
________ = 1
def _________(__________,___________):
    if len(___________) > 0:
        return ___________[0].join(_________(____________,___________[1:]) for ____________ in __________.split(___________[0]))
    else:
        if chr(46) in __________:
            return _________(__________.split(chr(46))[0],___________)+chr(46)+chr(46).join(__________.split(chr(46))[1:])
        if __________ != "" and not (__________[0].isdigit() or __________[0] in "\""+chr(39)) and not __________ in _____:
            global ________,_______
            if __________ in _______:
                return _______[__________]
            else:
                _______[__________] = chr(95)*________
                ________ += 1
                return _______[__________]
    return __________
def _____________(__________):
    if __________ == "\""+"\"" or __________ == chr(39)+chr(39):return __________
    if not ___:return __________
    ______________ = ""
    _______________ = False
    for ____________ in __________[1:-1]:
        if _______________:
            ______________ += ____________+"\""+chr(43)
            _______________ = False
        elif ____________ == "\\":
            ______________ += "\""+"\\"
            _______________ = True
        else:
            ______________ += chr(99)+chr(104)+chr(114)+chr(40)+str(ord(____________))+chr(41)+chr(43)
    return ______________[:-1]
def ________________(_________________):
    if len(_________________) > 3:
        global ________,_______
        if _________________[:4] == chr(102)+chr(114)+chr(111)+chr(109):
            if chr(32)+chr(97)+chr(115)+chr(32) in _________________:
                _______[_________________.split(chr(32))[-1]] = chr(95)*________
                ________ += 1
                return _________________.split(chr(32)+chr(97)+chr(115)+chr(32))[0]+chr(32)+chr(97)+chr(115)+chr(32)+chr(95)*(________-1)                
            _______[_________________.split(chr(32))[-1]] = chr(95)*________
            ________ += 1
            return _________________ +chr(32)+chr(97)+chr(115)+chr(32)+chr(95)*(________-1)
        elif _________________[:6] == chr(105)+chr(109)+chr(112)+chr(111)+chr(114)+chr(116):
            if chr(32)+chr(97)+chr(115)+chr(32) in _________________:
                _______[_________________.split(chr(32))[-1]] = chr(95)*________
                ________ += 1
                return _________________.split(chr(32)+chr(97)+chr(115)+chr(32))[0]+chr(32)+chr(97)+chr(115)+chr(32)+chr(95)*(________-1)                
            _______[_________________.split(chr(32))[-1]] = chr(95)*________
            ________ += 1
            return _________________ +chr(32)+chr(97)+chr(115)+chr(32)+chr(95)*(________-1)
    __________________ = [chr(32),chr(58),chr(44),chr(43),chr(45),chr(42),chr(47)+chr(47),chr(47),chr(37),chr(91),chr(93),chr(40),chr(41),chr(123),chr(125),chr(61),chr(62),chr(60),chr(33)]
    ______________ = ""
    ___________________ = _________________
    ____________________ = 0

    while chr(39) in ___________________ or "\"" in ___________________:
        if ___________________[____________________] == chr(35):break
        if ___________________[____________________] == "\"":
            _____________________ = ____________________ + 1
            while ___________________[_____________________] != "\"" or (___________________[_____________________-1] == "\\" and not (_____________________ < 2 or ___________________[_____________________-2] == "\\")):
                _____________________+=1
            return _________(___________________[:____________________],__________________)+_____________(___________________[____________________:_____________________+1])+________________(___________________[_____________________+1:])
        if ___________________[____________________] == chr(39):
            _____________________ = ____________________ + 1
            while ___________________[_____________________] != chr(39) or ___________________[_____________________-1] == "\\":
                _____________________+=1
            return _________(___________________[:____________________],__________________)+_____________(___________________[____________________:_____________________+1])+________________(___________________[_____________________+1:])
        ____________________ += 1
    return _________(_________________.split(chr(35))[0],__________________)


if _.path.exists(______):
    if ______[-3:].lower() != chr(46)+chr(112)+chr(121):
        input(chr(116)+chr(104)+chr(105)+chr(115)+chr(32)+chr(119)+chr(97)+chr(115)+chr(32)+chr(100)+chr(101)+chr(115)+chr(105)+chr(103)+chr(110)+chr(101)+chr(100)+chr(32)+chr(102)+chr(111)+chr(114)+chr(32)+chr(112)+chr(121)+chr(116)+chr(104)+chr(111)+chr(110)+chr(32)+chr(102)+chr(105)+chr(108)+chr(101)+chr(115)+chr(32)+chr(111)+chr(110)+chr(108)+chr(121)+chr(59)+chr(32)+chr(111)+chr(116)+chr(104)+chr(101)+chr(114)+chr(32)+chr(102)+chr(105)+chr(108)+chr(101)+chr(116)+chr(121)+chr(112)+chr(101)+chr(115)+chr(32)+chr(112)+chr(114)+chr(111)+chr(98)+chr(97)+chr(98)+chr(108)+chr(121)+chr(32)+chr(119)+chr(105)+chr(108)+chr(108)+chr(32)+chr(103)+chr(101)+chr(116)+chr(32)+chr(107)+chr(105)+chr(110)+chr(100)+chr(111)+chr(102)+chr(32)+chr(119)+chr(97)+chr(99)+chr(107)+chr(46)+"\n"+chr(72)+chr(105)+chr(116)+chr(32)+chr(91)+chr(69)+chr(110)+chr(116)+chr(101)+chr(114)+chr(93)+chr(32)+chr(116)+chr(111)+chr(32)+chr(112)+chr(114)+chr(111)+chr(99)+chr(101)+chr(101)+chr(100)+chr(32)+chr(97)+chr(110)+chr(121)+chr(119)+chr(97)+chr(121))
    if _.path.exists(______[:-3]+chr(95)+chr(46)+chr(112)+chr(121)):input(______[:-3]+chr(95)+chr(46)+chr(112)+chr(121)+chr(32)+chr(97)+chr(108)+chr(114)+chr(101)+chr(97)+chr(100)+chr(121)+chr(32)+chr(101)+chr(120)+chr(105)+chr(115)+chr(116)+chr(115)+chr(46)+chr(32)+chr(32)+chr(104)+chr(105)+chr(116)+chr(32)+chr(91)+chr(69)+chr(110)+chr(116)+chr(101)+chr(114)+chr(93)+chr(32)+chr(116)+chr(111)+chr(32)+chr(112)+chr(114)+chr(111)+chr(99)+chr(101)+chr(101)+chr(100)+chr(32)+chr(97)+chr(110)+chr(100)+chr(32)+chr(111)+chr(118)+chr(101)+chr(114)+chr(119)+chr(114)+chr(105)+chr(116)+chr(101)+chr(32)+chr(105)+chr(116))
    with open(______) as ______________________:_______________________ = ______________________.read()
    with open(______[:-3]+chr(95)+chr(46)+chr(112)+chr(121),chr(119)+chr(43)) as ______________________:
        ______________________.write("\n".join(________________(____________) for ____________ in _______________________.split("\n")))
            
else:print(______+ chr(32)+chr(100)+chr(111)+chr(101)+chr(110)+chr(115)+chr(116)+chr(32)+chr(115)+chr(101)+chr(101)+chr(109)+chr(32)+chr(116)+chr(111)+chr(32)+chr(101)+chr(120)+chr(105)+chr(115)+chr(116)+chr(32)+chr(40)+chr(97)+chr(107)+chr(97)+chr(32)+chr(117)+chr(114)+chr(32)+chr(98)+chr(97)+chr(100)+chr(41))
